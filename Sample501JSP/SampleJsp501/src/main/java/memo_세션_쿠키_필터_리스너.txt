세션
서버에서 저장하는 임시 메모리.(0x100 스토리)
톰캣 서버(WAS(Web application Server)= 웹서버 + jsp 컨테이너 )
- extend HttpServletRequest ,
- 부모의 클래스 중에서, 세션의 정보를 가져오는 기능,
getSession()

- 세션을 이용해서, 로그인 체크 기능 확인해보기.
1) 사용자 로그인 성공시 -> HttpSession 에 임시 저장공간에 할당. -> 리스트로 가기.
2) 실패시 -> 로그인 폼.

기본문법.
세터,
 HttpSession session = req.getSession();
    //세션의 정보를 저장.문자열의 형태.
    session.setAttribute("loginInfo",result);

게터,
HttpSession session = req.getSession();
session.getAttribute("loginInfo") 의 반환 값, Object 라서, 다운 캐스팅 필요함.
    String loginInfoSession = (String) session.getAttribute("loginInfo");


웹서버, 무상태(무언가 저장 안함),
(클라이어트, 서버) 한세트
(요청, 응답) 한세트,

웹, 임시로 저장할 일이 발생함.
1) 장기적으로 저장할 데이터, 디비 서버 보관,
2) 사이트 , 로그인, 로그인 정보를 임시로 저장할 공간. -> 서버의 임시 메모리에 저장. -> 세션
초반에는, SSR(Server Side Rendering) -> 대용량
-> CSR(리액트, 뷰, API 서버(화면 안그리고, 데이터만 전달.)
단점, 휘발성, 서버의 자원을 계속 이용해요.
3) 특정 사이트 에 접속 했을 때, 쿠키 정보 허용 해도 되냐고 ?
정보가 노출이 되어도, 상관없는 임시 데이터,
쇼핑몰에서


참고,
OSI 7계층.
물리,데이터링크,네트워크,전송,세션,표현,응용

쿠키
문자열 형태로, key, value 의 형태로 데이터를 저장.
클라이언트 저장하는 파일.

쿠키를 생성하는 방법,
1) 서버에서 자동으로 생성하는 쿠키 :
키: JSSESSIONID 이름으로, 값 : F994A31D7351DDE3862876D0B64C7040
경로 : /

2) 개발자가 임의로 생성하는 쿠키 :
- 이름도 자유롭게 정함.
- 유효기간도 임의로 저장 가능, -> 자동로그인,
- 생성하면, 반드시 Response 객체에 담아서, 브라우저에 전달해야함.
- 경로, 도메인을 지정가능.

필터
반드시 거쳐감,

리스너
각 공간의 임시 저장소,

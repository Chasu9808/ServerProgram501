jsp(Java Server Page),

웹 브라우저 - 서버, 인터넷을 이용해서, 웹접근.
서버(웹서버, WAS(톰캣서버))

1. 웹 프로그래밍 기본
1)환경설정
2) 기본 동작 방식
3) Web MVC 방식,

2. JDBC, 웹

3. 세션,쿠키, 필터, 리스너
-----------------------------------
4. 스프링 MVC
================================================

1) 환경 설정, 톰캣 9버전으로 받기.
참고 링크:
https://tomcat.apache.org/download-90.cgi
윈도우즈 10, 64비트 받고,
압축 해제 후, 해당 폴더 위치
- c:\ 밑에 하기.
예) C:\apache-tomcat-9.0.89

2) 인텔리 제이,
-> 새프로젝트 생성 클릭, -> jakarta 프로젝트 선택,(왼쪽 메뉴에서)

-> 이름 : Sample501JSP

-> 위치: 용량 관계상 , D 드라이브로 이사감.
예) D:\JSP_WorkSpace\Sample501JSP

-> 템플릿 : 웹 애플리케이션 , 변경,

-> 애플리케이션 서버 선택: 우리가 다운 받은 9.0.89 톰캣 위치 폴더 선택.

-> 언어 : 자바 선택.

-> 시스템 빌드 : Gradle 선택. (외부 라이브러리 자동 관리툴 )

-> 그룹 : com.busanit501(나중에는 배포시, 실제 구분한 도메인 주소)

-> 아티팩트아이디 : Sample501JSP(기본 프로젝트 이름으로 사용함.)

==============================================================
-> 이슈 발생.
프로젝트 생성시, 9.1 버전 x , jakarta EE 8 버전으로 선택 하기.
==============================================================


확장팩 관련 ,UI 툴
1. Atom Material Icon
폴더 아이콘 , 머터리얼 스타일 적용.
2. GitToolBox
깃 관련 도구 박스.
3. .ignore (오타 수정)
깃에서 제외하는 파일 쉽게 선택 하는 도구.
4. Nyan Progress Bar
고양이 무지개 상태 바 표시
5. Rainbow Brackets
괄호 열고 닫기 할 때, 무지개색

설정 경로 : 파일 -> 세팅 -> 에디터 -> 플로그인
ctrl alt s

실행 테스트 확인, : 1) 오른쪽 상단 톰캣에 보이는 플레이 버튼 클릭.
2) shift + f10 ,
웹브라우저에서, Hello World.

- 실행시, 콘솔 창에보면, 한글 깨짐 현상 보임.

-> 도움말 -> 사용자 지정 VM 옵션 클릭
->  추가할 내용
-Dfile.encoding=UTF-8
-Dconsole.encoding=UTF-8

- 확인시, 인텔리제이 완전 종료 후, 다시 시작.


문제점 제시 : 웹브라우저에서 경로가 너무 길다.
http://localhost:8080/Gradle___com_busanit501___Sample501JSP_1_0_SNAPSHOT_war/

해결책.
-> 오른쪽 상단, 톰캣 아이콘(고양이모양, 화살표 클릭 )
-> 구성 편집 -> 2번째 배포 -> 기본 제거
-> 추가, 이름 맨뒤에 exploded 이런 파일 이름 선택.
-> 애플리케이션 컨텍스트 : 다지우고 , 변경 슬래시 하나 -> /
-> 적용.

다시, 톰캣 서버 시작 후 , 웹브라우저에서 확인.

http://localhost:8080



변경된 코드의 반영 하기. 설정.
코드를 변경 후, 재시작 주로하는데, 자동화 하기.

-> 오른쪽 상단, 톰캣 아이콘(고양이모양, 화살표 클릭 )
-> 구성 편집 -> 첫번째 탭, 서버 이고
하단 메뉴에서

-> VM 옵션 부분에, 한글 인코딩 설정 부분,
-Dfile.encoding=UTF-8

-> 업데이트 액션시 -> 클래스 및 리소스 업데이트

-> 프레임 비활성화시 -> 클래스 및 리소스 업데이트

적용 , 확인.

-> 이슈 발생.
프로젝트 생성시, 9.1 버전 x , jakarta EE 8 버전으로 선택 하기.

설명,
웹 애플리케이션 테크 트리.

구조1, jsp 프로젝트, 서버가 화면을 같이 렌더링

서블릿, -> 자바의 클래스 파일.

jsp(자바 서버 페이지) : html 안에 자바 코드를 주입.
html + java 코드
-> 업체에서, jsp 프로젝트에서, 웹 개발을 하는 업체.

구조2, 스프링 프로젝트 , 서버가 화면을 같이 렌더링

스프링 레거시 (설정이 많음.)

스프링 부트(설정이 많이 자동화, 커스텀 마이징 다 가능함. )

===================================================
구조3, 레스트풀 프로젝트, 데이터 만 전달.
화면을 클라이언트 사이드 렌더링, 프론트 : React, Vue, 모바일

=============================================================

실행 방법
1. http://localhost:8080/index.jsp
http://localhost:8080/hello2.jsp
jsp 파일에 직접 접근.
html + java , 자바코드를 최대한 간단하게 주입 하는 방법론.

2. 서블릿 , (클래스 파일) 접근.
http://localhost:8080/test

결론, 화면에 직접 접근 안함.
항상, 백엔드, 서블릿, 자바파일의 특정 컨트롤러를 이용해서, 화면에 접근.

미니실습.
1. 임의의 서블릿 파일 만들어서, 확인 해보기.
샘플

















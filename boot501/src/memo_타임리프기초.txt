타임리프 기초
스프링에서 공식적으로 사용하는 프론트 화면 그리기 도구.

라이브러리 도구 설치.
build.gradle 파일에서 설치
   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


타임림프를 사용시, 기본 모양
태그 내부 기준.
th:키워드 = ""


기본 설정.
1. 사용법, 태그 안에서 사용하는 방법
<html lang="ko" xmlns:th="www.thymeleaf.org">

2. 특정 타임리프 블록 안에서 사용하기.
<th:block>
 타임리프 문법 사용하기.
</block>


1
출력

기본문법
th:text="${서버에서 전달한 변수명}"

<h1>타임리프 출력하는 방식 2가지
  1. 인라인으로 출력하는 방법 </h1>
  <h1 th:text="${list}"></h1>
<h1>2. 태그 밖에서 출력하는 방법.</h1>

기본문법
[[${list}]]

<h2>[[${list}]]</h2>


2 주석
시스템에서, 사용하는 ctrl + / , 기본 사용하기.
<!-- /*   */-->

3 변수 선언
<th:with = "변수명 ">
예시)
선언
<th:with = "num1 = ${10}, num2 = ${20}">
사용
<h3 th:text="${num1 + num2}"> </h3>

<h2>변수 선언4</h2>
<div th:with = "num1 = 10, num2 = 20">
  <h2>변수 사용4</h2>
  <h3 th:text="${num1 + num2}"> </h3>
</div>

4반복문
1) 태그 내부에 인라인 방식.
2) 특정 블로 안에서 사용하는 방식.

<h2>기본문법 : 목록에서 하나씩 꺼내서 반복작업하기.</h2>
<!--<th:each="변수명 : 목록">-->
<!--예시)-->
<ul>
  <li th:each="str : list" th:text="${str}"></li>
</ul>

기본문법:
<ul>
<th:block th:each="str : ${list}" >
  <li> [[${str}]] </li>
</th:block >
</ul>

5 반복문에서 status  속성 이용해서, 숫자세기하기.
<!--예시)-->
<ul>
  <li th:each="str , status: ${list}" ></li>
  <li>[[${status.index}]]  --[[${str}]] </li>
</ul>



